# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#   'prefix': 'log'
#   'body': 'console.log $1'
#

## Python
'.source.python':
  'python template':
    'prefix': 'template'
    'body': '# -*- coding: utf-8 -*-\n\nif __name__ == \'__main__\':\n'

## HTML
'.text.html.basic':
  'html template':
    'prefix': 'template'
    'body': '''
      <!DOCTYPE html>
      <html lang="ja">
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no">
        <title></title>
        <link rel="stylesheet" href="">
        <script src=""></script>
      </head>
      <body>
        $0
      </body>
      </html>
    '''

## CSS
'.source.css':
  'css template':
    'prefix': 'template'
    'body': '''
      @charset "utf-8";
      /* @import "reset.css"; */

      body {
        color: #333;
        font-family: "Helvetica Neue", Helvetica, Arial, "游ゴシック", YuGothic, "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "メイリオ", Meiryo, sans-serif;
      }

      p {
        line-height: 1.4;
      }
    '''

## JavaScript
'.source.js':
  'jQuery onload':
    'prefix': '$func'
    'body': '$(function() {\n$0\n});\n'
  'jQuery ajax':
    'prefix': '$.ajax'
    'body': '''
      $.ajax({
        type: '${1:POST}',
        url: '$2',
        data: ${3:data},
        contentType: '${4:application/json}',
        success: function(msg) {
        },
        error: function(msg) {
        }
      });
      $0
    '''
  'arrow function':
    'prefix': '()'
    'body': '() => {$0}'
  'DOMContentLoaded EventListener':
    'prefix': 'dom'
    'body': '''
      document.addEventListener('DOMContentLoaded', (event) => {
        $0
      });
    '''
  'doc param':
    'prefix': '@param'
    'body': '@param \{${1:type}\} ${2:name} ${3:detail}'
  'mocha bdd-describe':
    'prefix': 'describe'
    'body': '''
      describe('$1', () => {
      });
    '''
  'mocha bdd-it':
    'prefix': 'it'
    'body': '''
      it('$1', () => {
      });
    '''

## PHP
'.text.html.php':
  'pre dump':
    'prefix': 'predump'
    'body': '''
      echo \'<pre>\';
      var_dump($1);
      echo \'</pre>\';
    '''
  'error log':
    'prefix': 'log'
    'body': 'error_log(print_r($1, true), 0);\n'
  'doc param':
    'prefix': '@param'
    'body': '@param ${1:type} \$${2:name} ${3:detail}'
  'test template':
    'prefix': 'test'
    'body': '''
      /**
       * @test
       * @dataProvider test$1Provider
       */
      function test$1($expedted, $testData)
      {
          $0
      }
      function test$1Provider()
      {
          return array(
              'test1' => array('expedted', 'testData'),
          );
      }
    '''
